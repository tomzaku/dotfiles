map cmd+n new_os_window_with_cwd


# nvim
# https://github.com/knubie/vim-kitty-navigator/tree/master
# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other
map ctrl+cmd+\ launch --location=hsplit --cwd=current

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
map ctrl+cmd+- launch --location=vsplit --cwd=current

# Rotate the current split, chaging its split axis from vertical to
# horizontal or vice versa
map ctrl+shift+r layout_action rotate

# Move the active window in the indicated direction
# Other unix systems:
allow_remote_control yes
listen_on unix:/tmp/mykitty

# Switch focus to the neighboring window in the indicated direction
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l

map ctrl+cmd+r set_tab_title

map cmd+home resize_window reset


# Tab navigator
map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9


# Resizing windows
map cmd+left resize_window narrower
map cmd+right resize_window wider
map cmd+up resize_window taller
map cmd+down resize_window shorter 3
# reset all windows in the tab to default sizes
# zoom
# map f6 toggle_layout stack NOTE: Doesn't work
# map ctrl+y kitten zoom_toggle.py


